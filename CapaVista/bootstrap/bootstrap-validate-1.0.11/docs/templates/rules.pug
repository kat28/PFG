extends layouts/app


block vars
  - var title = "Validation Rules"
  - var description = "Learn about the available validation rules " + meta.name + " ships with."

block content
  .container

    h1.page-header Available Rules
    p.lead
      | Bootstrap Validate currently ships the following rules.
      | Below you will find a description of every rule, its very own options
      | and a usage example.

    .alert.alert-info
      h3(style='margin-top: 0;') Are you missing a rule to validate your Bootstrap Forms?
      p We can surely help you on that one! Also, adding rules is super easy.
      p But before you need to get your hands dirty, file an Issue to get your rule added!
      p
        a.github-button(href="https://github.com/PascaleBeier/bootstrap-validate/issues" data-icon="octicon-issue-opened"
        data-size="large" data-show-count="true" aria-label="File an Issue to get your Rule added") Issue

    each rule, i in rules
      - var types = [{ label: 'number', example: '5' }, { label: 'string', example: 'Name' }];
      - var docblock = rule.toString().match(/\/\*\*[^/]+\//)[0]
      - var params = docblock.match(/@param.*/g);
      - var description = docblock.split('@description');
      - var hasOptions = rule.length !== 1
        .rule(style='margin-bottom: 60px;')
          h2=rule.name
          p.lead=description[description.length-1].slice(0, -3)

          ul.nav.nav-tabs(role="tablist")
            li.active(role="presentation")
              a(href="#options_" + i aria-controls="options_" + i role="tab" data-toggle="tab") Options
            li(role="presentation")
              a(href="#usage_" + i aria-controls="usage_" + i role="tab" data-toggle="tab") Usage
            li(role="presentation")
              a(href="#source_" + i aria-controls="source_" + i role="tab" data-toggle="tab") Source

          .tab-content
            .tab-pane.fade.in.active(role="tabpanel" id="options_" + i)

              h3 Options

              p Available Options: #{rule.length - 1}
              unless hasOptions
                .alert.alert-info You only need to pass an Error Text.

              - var optionsString = "";
              if hasOptions
                ul
                  each param in params
                    li
                      each word in param.split(' ').slice(2)
                        |  #{word}
                      - var type = types.find(function (type) { return type.label + ':' === param.split(' ')[2]; });
                      - optionsString += type.example + ':';
                      strong  Example: #{type.example}

            .tab-pane.fade(role="tabpanel" id="usage_" + i)
              h3 Usage

              pre
                code.javascript bootstrapValidate('#input', '#{rule.name}#{constants.SEPARATOR_OPTION}#{optionsString}Obligatory Error Text')
            .tab-pane.fade(role="tabpanel" id="source_" + i)
              h3 Source

              pre
                code.javascript=rule.toString()

    a.btn.btn-lg.btn-default.pull-left(href="usage.html") ‚Üê Usage
